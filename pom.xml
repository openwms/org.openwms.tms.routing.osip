<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.openwms</groupId>
        <artifactId>org.openwms.parent</artifactId>
        <version>27.2</version>
        <relativePath/>
    </parent>
    <artifactId>org.openwms.tms.routing.osip</artifactId>
    <version>1.1.0-SNAPSHOT</version>
    <name>OpenWMS.org TMS: Routing Services OSIP Support</name>
    <description>A library to support the OSIP message structures</description>
    <url>https://openwms.github.io/${project.artifactId}/index.html</url>

    <developers>
        <developer>
            <id>scherrer</id>
            <name>Heiko Scherrer</name>
            <email>scherrer@openwms.org</email>
            <url>https://openwms.github.io/</url>
            <organization>Interface21.io</organization>
            <organizationUrl>https://www.interface21.io</organizationUrl>
            <timezone>+1</timezone>
            <roles>
                <role>Project Lead</role>
                <role>Architect</role>
                <role>Developer</role>
                <role>Deployer</role>
            </roles>
        </developer>
    </developers>

    <properties>
        <activiti-spring-boot-starter.version>8.8.0-alpha.7</activiti-spring-boot-starter.version>
        <asm.version>9.3</asm.version>
        <camunda.version>7.23.0-alpha3</camunda.version>
        <common-service.version>3.0.0</common-service.version>
        <core.test.arch.version>1.0.2</core.test.arch.version>
        <core.units.version>0.7.0</core.units.version>
        <flowable.version>6.7.2</flowable.version>
        <groovy-jsr223.version>3.0.9</groovy-jsr223.version>
        <process.runtime.version>0.1.0</process.runtime.version>
        <schemaspy-maven-plugin.version>5.3.1</schemaspy-maven-plugin.version>
        <spring-cloud-dependencies.version>2024.0.0</spring-cloud-dependencies.version>
        <tms.routing.lib.version>2.1.0-SNAPSHOT</tms.routing.lib.version>
        <transportation-service.version>2.0.0</transportation-service.version>
    </properties>

    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>summary</report>
                            <report>team</report>
                            <report>issue-management</report>
                            <report>ci-management</report>
                            <report>scm</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <build>
        <finalName>openwms-tms-routing-osip</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>
                            -Amapstruct.defaultComponentModel=spring
                        </arg>
                        <arg>
                            -Amapstruct.suppressGeneratorTimestamp=true
                        </arg>
                        <arg>
                            -Amapstruct.suppressGeneratorVersionInfoComment=true
                        </arg>
                        <arg>
                            -Amapstruct.defaultInjectionStrategy=constructor
                        </arg>
                        <arg>
                            -Amapstruct.verbose=true
                        </arg>
                    </compilerArgs>
                    <enablePreview>false</enablePreview>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <!-- Activiti -->
            <dependency>
                <groupId>org.activiti</groupId>
                <artifactId>activiti-spring-boot-starter</artifactId>
                <version>${activiti-spring-boot-starter.version}</version>
            </dependency>

            <!-- Camunda -->
            <dependency>
                <groupId>org.camunda.bpm</groupId>
                <artifactId>camunda-bom</artifactId>
                <version>${camunda.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.camunda.bpm.dmn</groupId>
                <artifactId>camunda-engine-dmn-bom</artifactId>
                <version>${camunda.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.camunda.bpm.springboot</groupId>
                <artifactId>camunda-bpm-spring-boot-starter</artifactId>
                <version>${camunda.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-jsr223</artifactId>
                <version>${groovy-jsr223.version}</version>
            </dependency>

            <!-- Flowable>
            <dependency>
                <groupId>org.flowable</groupId>
                <artifactId>flowable-spring-boot-starter</artifactId>
                <version>${flowable.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.flowable</groupId>
                <artifactId>flowable-spring-boot-starter-dmn</artifactId>
                <version>${flowable.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency-->

            <dependency>
                <groupId>org.openwms</groupId>
                <artifactId>org.openwms.core.test.arch</artifactId>
                <version>${core.test.arch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openwms</groupId>
                <artifactId>org.openwms.core.units</artifactId>
                <version>${core.units.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openwms</groupId>
                <artifactId>org.openwms.common.service.lib</artifactId>
                <version>${common-service.version}</version>
                <classifier>client</classifier>
            </dependency>
            <dependency>
                <groupId>org.openwms</groupId>
                <artifactId>org.openwms.core.process.execution</artifactId>
                <version>${process.runtime.version}</version>
                <classifier>all</classifier>
            </dependency>
            <dependency>
                <groupId>org.openwms</groupId>
                <artifactId>org.openwms.tms.routing.lib</artifactId>
                <version>${tms.routing.lib.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openwms</groupId>
                <artifactId>org.openwms.tms.transportation</artifactId>
                <version>${transportation-service.version}</version>
                <classifier>client</classifier>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Project Dependencies -->
        <dependency>
            <groupId>org.openwms</groupId>
            <artifactId>org.openwms.core.units</artifactId>
            <!-- Provide -->
        </dependency>
        <dependency>
            <groupId>org.openwms</groupId>
            <artifactId>org.openwms.common.service.lib</artifactId>
            <classifier>client</classifier>
            <!-- Provide -->
        </dependency>
        <dependency>
            <groupId>org.openwms</groupId>
            <artifactId>org.openwms.core.process.execution</artifactId>
            <classifier>all</classifier>
            <!-- Provide -->
        </dependency>
        <dependency>
            <groupId>org.openwms</groupId>
            <artifactId>org.openwms.tms.transportation</artifactId>
            <classifier>client</classifier>
            <!-- Provide -->
        </dependency>
        <dependency>
            <groupId>org.openwms</groupId>
            <artifactId>org.openwms.core.test.arch</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.openwms</groupId>
            <artifactId>org.openwms.tms.routing.lib</artifactId>
            <!-- Provide -->
        </dependency>

        <!-- Spring Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
			<optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
            <!-- Provide it -->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-json</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- both for retry -->
        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Observability: Monitoring -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-exporter-otlp</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Workflow -->
        <dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-spring-boot-starter</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.camunda.bpm</groupId>
            <artifactId>camunda-engine-spring</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>commons-lang</groupId>
                    <artifactId>commons-lang</artifactId>
                </exclusion>
            </exclusions>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm.springboot</groupId>
            <artifactId>camunda-bpm-spring-boot-starter</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.camunda.bpm.dmn</groupId>
            <artifactId>camunda-engine-dmn</artifactId>
            <optional>true</optional>
        </dependency>

        <!--dependency>
            <groupId>org.flowable</groupId>
            <artifactId>flowable-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flowable</groupId>
            <artifactId>flowable-spring-boot-starter-dmn</artifactId>
        </dependency-->
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-jsr223</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- 3rd party dependencies -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <!-- Required to use PATCH -->
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-httpclient</artifactId>
            <optional>true</optional>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.interface21</groupId>
            <artifactId>ameba-lib</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-core</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>io.interface21</groupId>
            <artifactId>ameba-lib</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test-autoconfigure</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <environment>:dev</environment>
            </properties>
        </profile>
        <profile>
            <id>production</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <environment>:production</environment>
            </properties>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>sonatype-nexus-staging</id>
            <name>Staging Repository</name>
            <url>https://oss.sonatype.org/content/groups/staging/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <repository>
            <id>activiti</id>
            <name>activiti</name>
            <url>https://artifacts.alfresco.com/nexus/content/repositories/activiti-releases</url>
        </repository>
    </repositories>
</project>
